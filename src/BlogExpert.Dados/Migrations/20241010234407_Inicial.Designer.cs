// <auto-generated />
using System;
using BlogExpert.Dados.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogExpert.Dados.Migrations
{
    [DbContext(typeof(BlogExpertDbContext))]
    [Migration("20241010234407_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmailCriacao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Autores", (string)null);
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("EmailCriacao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comentarios", (string)null);
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("varchar(4000)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailCriacao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Posts", (string)null);
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Comentario", b =>
                {
                    b.HasOne("BlogExpert.Negocio.Entities.Post", "Post")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostId")
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Post", b =>
                {
                    b.HasOne("BlogExpert.Negocio.Entities.Autor", "Autor")
                        .WithMany("Posts")
                        .HasForeignKey("AutorId")
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Autor", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BlogExpert.Negocio.Entities.Post", b =>
                {
                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
